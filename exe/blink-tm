#!/usr/bin/env ruby
require 'blink_tm'


if ARGV.any?(/^\-(\-version|v)$/)
	puts "BlinkTM Version #{BlinkTM::BOLD}#{BlinkTM::VERSION}#{BlinkTM::RESET}"
	exit
end

written_pid = false

BlinkTM::log "BlinkTM Version #{BlinkTM::VERSION}"
if File.exist?(BlinkTM::LOCKFILE)
	BlinkTM.log 'error', "Lockfile #{BlinkTM::LOCKFILE} already exists! If it's not running you might manually delete this to make blinktm work."
	exit!
else
	begin
		IO.write(BlinkTM::LOCKFILE, $$)
		written_pid = true
	rescue Exception
		puts "Can't write to #{BlinkTM::LOCKFILE}"
		exit!
	end
end

retry_count = 0

# Find Device running Blink Taskmanager
dev = BlinkTM::find_device!
file = nil

begin
	BlinkTM.start(dev) { |x| file = x }
rescue BlinkTM::SyncError
	sleep 1
	retry
rescue Errno::ENOENT, Errno::EIO, BlinkTM::NoDeviceError
	file &.close
	sleep 0.125
	dev = BlinkTM::find_device!
	retry
rescue Interrupt, SystemExit, SignalException
	file &.close
	File.delete(BlinkTM::LOCKFILE)
rescue Exception
	File.delete(BlinkTM::LOCKFILE)
end
